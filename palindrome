/*

A palindromic number is a number (such as 626) that remains the same when its digits are reversed.
Write a function that returns true if a given number is a palindrome, and false, if it is not.
Complete the given function, so that the code in main works and results in the expected output.

Sample Input:
13431

Sample Output:
13431 is a palindrome
*/
//
//
#include <iostream>
using namespace std;
bool isPalindrome(int x) {
    //complete the function
    /*
    
    
    /* Attempted recursion but failed
    bool isPalindrome(int x , int r) {
    if(x < 0) {
        break;
    }
    else {
    r = r*10 + isPalindrome(x%10,r);
    x = (x - isPalindrome(x%10,r))/10;
    if(x == r){
        return true;
    }
    else
    {
        return false;
    }
    */
   
    // Resorted to just using a do while loop
    // This code was learnt from
    // https://www.programiz.com/cpp-programming/examples/palindrome-number
    int r, d, n = 0;
    n = x;
    do {
        d = n%10;
        r = r*10 + d;
        n = (n-d)/10;
    } while (n >0);
    //cout << "Reverse of "<< x << " is "<< r << endl;
    if (x == r) {
        return true;
    }
    else {
        return false;
    }
}
   

int main() {
    int n;
    cin >>n;
    
    if(isPalindrome(n)) {
        cout <<n<<" is a palindrome";
    }
    else {
        cout << n<<" is NOT a palindrome";
    }
    return 0;
}
